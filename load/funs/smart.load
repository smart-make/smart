# -*- makefile-gmake -*-
#
#    Copyright (C) 2012, Duzy Chan <code@duzy.info>
#    All rights reserved.
#
#####################################################
#
#  smart.load - Load a subdir under SRCDIR.
#  smart.load.done|* - Holds all smart files loaded.
#  
#  @param: loadee
#
$(smart.internal)

## Precondition#1: SRCDIR
ifndef SRCDIR
  smart~error := SRCDIR is undefined
else

## Precondition#2: @loadee
ifndef @loadee
  smart~error := @loadee is undefined
else

$(call smart~sync~smart~e,$(SRCDIR)/$(@loadee)/smart)

## Deal with absolute and relative paths:
ifeq ($(patsubst /%,/,$(@loadee)),/)
  # Absolute path (starting with '/')
  smart.load.prefix :=
  smart.load.file := $(@loadee)
else
  # Relative path to the SRCDIR
  smart.load.prefix := $(SRCDIR)/
  smart.load.file := $(SRCDIR)/$(@loadee)
endif

## Caculate smart.load.file base on existance of these:
##   1) $(smart.load.file)/smart
##   2) $(smart.load.file)/smart.mk
##   3) $(smart.load.file)
##   4) $(smart.load.file).mk
smart.load.file := $(strip $(or \
  $(or $(wildcard $(smart.load.file)/smart),$(shell ls $(smart.load.file)/smart 2>/dev/null)),\
  $(or $(wildcard $(smart.load.file)/smart.mk),$(shell ls $(smart.load.file)/smart.mk 2>/dev/null)),\
  $(or $(wildcard $(smart.load.file)),$(shell ls $(smart.load.file) 2>/dev/null)),\
  $(or $(wildcard $(smart.load.file).mk),$(shell ls $(smart.load.file).mk 2>/dev/null)),\
  ))

## Precondition#3: smart.load.file
ifndef smart.load.file
  $(warning $(SRCDIR)/$(@loadee) is missing)
  $(info $(SCRIPT):1: no build script '$(@loadee)')
  #$(error $(@loadee) not found)
  smart~error := missing scripts in "$(SRCDIR)/$(@loadee)"
else

## Precondition#4: check if loaded
ifeq ($(smart.load.done|$(smart.load.file)),true)
  $(warning info: "$(smart.load.file)" already loaded)
else

$(call smart.test.load.before.push)
$(call smart.push)
$(call smart.test.load.after.push)

## Step#0. Add to current smart file to MAKEFILE_LIST
MAKEFILE_LIST += $(smart.load.file)

## Step#1. Do declaration
include $(smart.declare)

## Step#2. Load the smart file
smart.load.done|$(smart.load.file) := true
include $(smart.load.file)
$(call smart.test.loaded)

#$(warning info: "$(smart.load.file)" loaded)

## Step#3. Build rules
include $(smart.rules)

$(call smart.test.load.before.pop)
$(call smart.pop)
$(call smart.test.load.after.pop)

endif # Precondition#4
endif # Precondition#3
endif # Precondition#2
endif # Precondition#1

smart.load.file :=
